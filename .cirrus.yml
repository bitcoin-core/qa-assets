env:
  CIRRUS_CLONE_DEPTH: 1

compute_credits_template: &CREDITS_TEMPLATE
  # https://cirrus-ci.org/pricing/#compute-credits
  # Only use credits for pull requests to the qa-assets repo
  # TODO maybe only use credits if $CIRRUS_BRANCH == 'main'
  use_compute_credits: $CIRRUS_REPO_FULL_NAME == 'bitcoin-core/qa-assets'
task:
  name: "lint"
  container:
    image: ubuntu:jammy
    cpu: 1
    memory: 4G  # Needed to clone the qa-assets repo?
    greedy: true
  use_compute_credits: true
  only_if: $CIRRUS_BASE_BRANCH == 'main'
  stateful: false  # https://cirrus-ci.org/guide/writing-tasks/#stateful-tasks
  setup_script: apt-get update && apt-get install -y git
  merge_base_script:
    - git fetch $CIRRUS_REPO_CLONE_URL "pull/${CIRRUS_PR}/merge"
    - git checkout FETCH_HEAD  # Derive full diff based on merge commit, see lint_script

  cargo_target_cache:
    folder: out-dir
    fingerprint_script: git log -1 -- ./contrib/touched-files-check/ .cirrus.yml
    populate_script:
      - mkdir out-dir
      - apt-get install -y cargo
      - cd ./contrib/touched-files-check
      - cargo build
      - mv ./target/debug/touched-files-check ./../../out-dir/
  lint_script: ./out-dir/touched-files-check "HEAD~..HEAD"
task:
  name: "[system libs, no depends, fuzz, valgrind]  [bookworm]"
  container:
    image: debian:bookworm
    cpu: 2
    memory: 8G
    greedy: true
  timeout_in: 720m
  # To avoid timeouts use some credits
  << : *CREDITS_TEMPLATE
  env:
    FILE_ENV: "./ci/test/00_setup_env_native_fuzz_with_valgrind.sh"
    MAKEJOBS: "-j12"
    DANGER_RUN_CI_ON_HOST: "1"
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - cd /tmp
    - apt update && apt install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - mkdir -p /tmp/bitcoin-core/ci/scratch
    - mv /tmp/cirrus-ci-build /tmp/bitcoin-core/ci/scratch/qa-assets
  ci_script:
    - cd /tmp/bitcoin-core
    - ./ci/test_run_all.sh
task:
  name: "[depends, fuzz, msan]  [lunar]"
  container:
    image: ubuntu:23.04
    cpu: 4
    memory: 16G
    greedy: true
  timeout_in: 120m
  env:
    FILE_ENV: "./ci/test/00_setup_env_native_fuzz_with_msan.sh"
    MAKEJOBS: "-j10"
    DANGER_RUN_CI_ON_HOST: "1"
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - cd /tmp
    - apt update && apt install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - mkdir -p /tmp/bitcoin-core/ci/scratch
    - mv /tmp/cirrus-ci-build /tmp/bitcoin-core/ci/scratch/qa-assets
  ci_script:
    - cd /tmp/bitcoin-core
    - sed -i 's|FuzzedDataProvider fuzzed_data_provider|return;FuzzedDataProvider fuzzed_data_provider|g'  ./src/test/fuzz/strprintf.cpp  # Avoid tinyformat issue
    - ./ci/test_run_all.sh
task:
  name: "[system libs, no depends, fuzz, sanitizers]  [lunar]"
  container:
    image: ubuntu:23.04
    cpu: 4  # To catch potential timeouts early, this task must replicate the config from https://github.com/bitcoin/bitcoin/blob/master/.cirrus.yml
    memory: 16G
    greedy: true
  timeout_in: 120m
  env:
    FILE_ENV: "./ci/test/00_setup_env_native_fuzz.sh"
    MAKEJOBS: "-j10"
    DANGER_RUN_CI_ON_HOST: "1"
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - cd /tmp
    - apt update && apt install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - mkdir -p /tmp/bitcoin-core/ci/scratch
    - mv /tmp/cirrus-ci-build /tmp/bitcoin-core/ci/scratch/qa-assets
  ci_script:
    - cd /tmp/bitcoin-core
    - ./ci/test_run_all.sh
